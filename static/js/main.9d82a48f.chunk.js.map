{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressedKeyEvent","event","setState","key","document","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,gBAAkD,SAAAC,GAChD,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,mBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,mBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,mBAC4B,IAAtBT,EAAWU,OAAX,mCAC4BV,EAD5B,KAEA,wFAzBd,GAAyBW,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.9d82a48f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.pressedKeyEvent);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.pressedKeyEvent);\n  }\n\n  pressedKeyEvent: (event: KeyboardEvent) => void = event => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {`${pressedKey.length !== 0\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet.....ƪ(˘⌣˘)ʃ.....waiting....'}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}